# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Web3 CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  Build:

    runs-on: ubuntu-latest

    permissions:
      checks: write
      pull-requests: write

    steps:
    - uses: actions/checkout@v3
      name: 'Checkout DarqueWarrior/TruffleSample'

    - uses: actions/setup-node@v3
      name: Use Node.js 16.x
      with:
        node-version: 16.x
        cache: 'npm'

    - run: npm install
      name: 'Install Truffle'

    - run: npx truffle compile
      name: 'Compile contracts'

    - run: npx truffle test
      name: 'Test contracts'

    - uses: EnricoMi/publish-unit-test-result-action@v1
      name: Publish contract test results
      if: success() || failure()
      with:
        files: 'TEST-results.xml'
        check_name: Contract
  
    - run: |
        mkdir -p staging/tests
        cp package.json ./staging/tests/
        cp -r test/ ./staging/tests/
      name: 'Package tests'
    
    - uses: actions/upload-artifact@v2
      name: Publish client
      with:
        name: tests
        path: './staging/tests'

    - run: |
        mkdir -p staging/contracts
        cp truffle-config.js ./staging/contracts/
        cp -r test/ ./client/src/contracts/
      name: 'Package contracts'
    
    - uses: actions/upload-artifact@v2
      name: Publish contracts
      with:
        name: contracts
        path: './staging/contracts'

    - run: npm install
      name: 'Install client dependencies'
      working-directory: './client'

    - run: npm run build
      name: 'Build client'
      working-directory: './client'

    - run: npm test -- --reporters=default --reporters=jest-junit
      name: 'Test client'
      working-directory: './client'

    - uses: EnricoMi/publish-unit-test-result-action@v1
      name: Publish client test results
      if: success() || failure()
      with:
        files: '**/junit.xml'
        check_name: Client

    - uses: actions/upload-artifact@v2
      name: Publish client
      with:
        name: client
        path: './client/build'
