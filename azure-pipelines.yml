# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: NodeTool@0
  displayName: 'Use Node.js 16.x'
  inputs:
    versionSpec: '16.x'

- script: npm install
  displayName: 'Install Truffle'

- script: npx truffle compile
  displayName: 'Compile contracts'

- script: npx truffle test
  displayName: 'Test contracts'

- task: PublishTestResults@2
  displayName: 'Publish contract test results'
  inputs:
    testRunTitle: 'Contract'
    testResultsFormat: 'JUnit'
    failTaskOnFailedTests: true
    testResultsFiles: '**/TEST-*.xml'

- task: CopyFiles@2
  displayName: Package tests
  inputs:
    Contents: |
      $(Build.ArtifactStagingDirectory)/test/**
      package.json
    TargetFolder: '$(Build.ArtifactStagingDirectory)/tests'

- task: PublishPipelineArtifact@1
  displayName: Publish tests
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)/tests'
    artifact: 'tests'
    publishLocation: 'pipeline'

- task: CopyFiles@2
  displayName: Package contracts
  inputs:
    Contents: |
      $(System.DefaultWorkingDirectory)/truffle-config.js
      $(System.DefaultWorkingDirectory)/client/src/contracts/**
    TargetFolder: '$(Build.ArtifactStagingDirectory)/contracts'

- task: PublishPipelineArtifact@1
  displayName: Publish contracts
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)/contracts'
    artifact: 'contracts'
    publishLocation: 'pipeline'

- script: npm install
  displayName: 'Install client dependencies'
  workingDirectory: $(System.DefaultWorkingDirectory)/client

- script: npm run build
  displayName: 'Build client'
  workingDirectory: $(System.DefaultWorkingDirectory)/client

- script: CI=true npm test -- --reporters=default --reporters=jest-junit
  displayName: 'Test client'
  workingDirectory: $(System.DefaultWorkingDirectory)/client

- task: PublishTestResults@2
  displayName: 'Publish client test results'
  inputs:
    testRunTitle: 'Client'
    testResultsFormat: 'JUnit'
    failTaskOnFailedTests: true
    testResultsFiles: '**/junit*.xml'

- task: PublishPipelineArtifact@1
  displayName: Publish client
  inputs:
    targetPath: '$(System.DefaultWorkingDirectory)/client/build'
    artifact: 'client'
    publishLocation: 'pipeline'